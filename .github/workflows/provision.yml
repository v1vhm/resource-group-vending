name: Provision Environment

on:
  workflow_dispatch:
    inputs:
      service_name:
        description: 'Service name'
        required: true
      service_short_name:
        description: 'Short name used for the file name'
        required: true
      location:
        description: 'Azure region'
        required: true
        default: 'eastus'
      environment:
        description: 'Environment'
        required: true
        default: 'dev'
      service_identifier:
        description: 'Service identifier'
        required: true
      github_repo:
        description: 'GitHub repo in owner/repo format'
        required: true
      port_context:
        required: true
        description: Includes the action's run id
        type: string

jobs:
  provision:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    env:
      ARM_USE_OIDC: true
      ARM_CLIENT_ID: ${{ secrets.AZURECLIENTID }}
      ARM_TENANT_ID: ${{ secrets.AZURETENANTID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURESUBSCRIPTIONID }}
      PORT_RUN_ID: ${{ fromJson(inputs.port_context).runId }}
      TF_VAR_port_run_id: ${{ fromJson(inputs.port_context).runId }}
      PORT_CLIENT_ID: ${{ secrets.PORT_CLIENT_ID }}
      PORT_CLIENT_SECRET: ${{ secrets.PORT_CLIENT_SECRET }}
    steps:
      - name: Start run
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ env.PORT_RUN_ID }}
          logMessage: 'Provisioning started'

      - uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURECLIENTID }}
          tenant-id: ${{ secrets.AZURETENANTID }}
          subscription-id: ${{ secrets.AZURESUBSCRIPTIONID }}

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Log start environment file creation
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ env.PORT_RUN_ID }}
          logMessage: 'Starting environment file creation'

      - name: Create environment file
        id: create_env_file
        run: |
          ORG=$(echo "${{ inputs.github_repo }}" | cut -d'/' -f1)
          REPO=$(echo "${{ inputs.github_repo }}" | cut -d'/' -f2)
          mkdir -p environments
          cat <<EOF > environments/${{ inputs.service_short_name }}_${{ inputs.environment }}_${{ inputs.location }}.yaml
          environment_name: ${{ inputs.service_name }}
          environment_short_name: ${{ inputs.service_short_name }}
          location: ${{ inputs.location }}
          environment: ${{ inputs.environment }}
          service_identifier: ${{ inputs.service_identifier }}
          port_run_id: $PORT_RUN_ID
          github:
            org: $ORG
            repo: $REPO
            entity: environment
            entity_name: ${{ inputs.service_short_name }}
          EOF
          echo "file_content<<EOF" >> $GITHUB_OUTPUT
          cat environments/${{ inputs.service_short_name }}_${{ inputs.environment }}.yaml >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Log environment file content
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ env.PORT_RUN_ID }}
          logMessage: ${{ steps.create_env_file.outputs.file_content }}

      - name: Log start initial commit environment file
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ env.PORT_RUN_ID }}
          logMessage: 'Committing environment file'

      - name: Commit environment file
        run: |
          git config user.email "75343302+getport-io[bot]@users.noreply.github.com"
          git config user.name "getport-io[bot]"
          git add environments/${{ inputs.service_short_name }}_${{ inputs.environment }}.yaml
          git commit -m "Add environment ${{ inputs.service_short_name }}_${{ inputs.environment }}"
          git push origin HEAD:main

      - name: Create state container
        run: |
          az storage container create \
            --name ${{ inputs.service_short_name }}_${{ inputs.environment }}_${{ inputs.location }} }} \
            --account-name vendingtfstate \
            --resource-group v1vhm-rg-vending-prod-uks-001 \
            --auth-mode login

      - name: Log start terraform init
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ env.PORT_RUN_ID }}
          logMessage: 'Starting Terraform Init'

      - name: Terraform Init
        run: terraform -chdir=terraform init

      - name: Log start terraform plan
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ env.PORT_RUN_ID }}
          logMessage: 'Starting Terraform Plan'

      - name: Terraform Plan
        id: plan
        run: |
          terraform -chdir=terraform plan -no-color > plan.log
          echo "plan<<EOF" >> $GITHUB_OUTPUT
          cat plan.log >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Log plan output
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ env.PORT_RUN_ID }}
          logMessage: ${{ steps.plan.outputs.plan }}

      - name: Log start terraform apply
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ env.PORT_RUN_ID }}
          logMessage: 'Starting Terraform Apply'

      - name: Terraform Apply
        id: apply
        run: |
          terraform -chdir=terraform apply -auto-approve -no-color > apply.log
          echo "apply<<EOF" >> $GITHUB_OUTPUT
          cat apply.log >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Log apply output
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ env.PORT_RUN_ID }}
          logMessage: ${{ steps.apply.outputs.apply }}

      - name: Capture outputs
        run: terraform -chdir=terraform output -json > tfoutput.json

      - name: Log start append outputs
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ env.PORT_RUN_ID }}
          logMessage: 'Appending Terraform outputs to environment file'

      - name: Append outputs to environment file
        run: |
          RGID=$(jq -r ".resource_group_ids.value[\"${{ inputs.service_short_name }}\"]" tfoutput.json)
          echo "resource_group_id: $RGID" >> environments/${{ inputs.service_short_name }}_${{ inputs.environment }}.yaml

      - name: Log start commit updated environment file
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ env.PORT_RUN_ID }}
          logMessage: 'Committing updated environment file'

      - name: Commit updated environment file
        run: |
          git config user.email "75343302+getport-io[bot]@users.noreply.github.com"
          git config user.name "getport-io[bot]"
          git add environments/${{ inputs.service_short_name }}_${{ inputs.environment }}.yaml
          git commit -m "Update environment ${{ inputs.service_short_name }}_${{ inputs.environment }} with outputs"
          git push origin HEAD:main

      - name: Mark run success
        if: success()
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ env.PORT_RUN_ID }}
          status: SUCCESS
          logMessage: 'Provisioning complete'

      - name: Mark run failure
        if: failure()
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ env.PORT_RUN_ID }}
          status: FAILURE
          logMessage: 'Provisioning failed'
